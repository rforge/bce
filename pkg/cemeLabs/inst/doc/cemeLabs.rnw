\documentclass[article,nojss]{jss}
\DeclareGraphicsExtensions{.pdf,.eps}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Add-on packages and fonts
\usepackage{graphicx}
\usepackage{amsmath}


\newcommand{\noun}[1]{\textsc{#1}}
%% Bold symbol macro for standard LaTeX users
\providecommand{\boldsymbol}[1]{\mbox{\boldmath $#1$}}

%% Because html converters don't know tabularnewline
\providecommand{\tabularnewline}{\\}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\newcommand{\cl}{\textbf{\textsf{cemeLabs }}}
\newcommand{\R}{\proglang{R}}
\title{
  \cl : utilities for processing laboratory analyses from NIOO-CEME
}
\Plaintitle{cemeLabs}

\Keywords{
  fatty acids, chromatogram, NIOO-CEME, \proglang{R}
}

\Plainkeywords{
  fatty acids, chromatogram, NIOO-CEME, R
}


\author{
Pieter Provoost\\
NIOO-CEME\\
The Netherlands
\And
Karline Soetaert\\
NIOO-CEME\\
The Netherlands
}

\Plainauthor{Pieter Provoost, Karline Soetaert}

\Abstract{
  \R package \c contains utilities to convert the files resulting from
  lab analyses performed in NIOO-CEME.
  
  To date, it only contains functions to analyse fatty acid chromatogram data.
  These functions are meant as an alternative to the EXCEL spreadsheet with
  VBA macro originally developed by Pieter van Rijswijk.
  
}

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Pieter Provoost\\
  Centre for Estuarine and Marine Ecology (CEME)\\
  Netherlands Institute of Ecology (NIOO)\\
  4401 NT Yerseke, Netherlands\\
  E-mail: \email{p.provoost@nioo.knaw.nl}\\
  \\
  Karline Soetaert\\
  Centre for Estuarine and Marine Ecology (CEME)\\
  Netherlands Institute of Ecology (NIOO)\\
  4401 NT Yerseke, Netherlands\\
  E-mail: \email{k.soetaert@nioo.knaw.nl}\\
  URL: \url{http://www.nioo.knaw.nl/ppages/ksoetaert}\\
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% R/Sweave specific LaTeX commands.
%% need no \usepackage{Sweave}
%\VignetteIndexEntry{cemeLabs: utilities for laboratory analyses performed at NIOO-CEME}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Begin of the document
\begin{document}
\SweaveOpts{engine=R,eps=FALSE}
\SweaveOpts{keep.source=TRUE}

<<preliminaries,echo=FALSE,results=hide>>=
library("cemeLabs")
options(prompt = "> ")
options(width=75)
@

\maketitle

\section{Introduction}
  \R-package \c has been designed as a tool to convert some files from
  the analysis lab at NIOO-CEME in a more suitable format.
  
  To date it only contains:
  \begin{itemize}
    \item plfa, a utility function to convert chromatogram data from the
      GC-FID carlo erba HRGC mega 2 GC.
   \end{itemize}

\section{plfa data}
  \subsection{Preparing input}

  The GC-FID carlo erba HRGC mega 2 GC instrument produces a binary file,
  which is processed with dedicated software and produces an EXCEL spreadsheet
  (see \ref{fig:excel}).
  
  To be used with the \code{plfa} R-function this spreadsheet has to be
  converted as follows:
  
  \begin{itemize}
    \item Remove the header with the file's metadata.
    \item Remove the line below the columns description (See \ref{fig:csv})
    \item Save the file as a \emph{csv} file (comma delimited file)
   \end{itemize}

\setkeys{Gin}{width=0.6\textwidth}
\begin{figure}
\begin{center}
\includegraphics{Rawinput.pdf}
\end{center}
\caption{Excel input sheet as produced by the CEME lab}
\label{fig:excel}
\end{figure}

\setkeys{Gin}{width=0.6\textwidth}
\begin{figure}
\begin{center}
\includegraphics{Converted.pdf}
\end{center}
\caption{Converted sheet; the header has been removed, as well as the
line below the column header; this should be exported as a csv file.}
\label{fig:csv}
\end{figure}

  \subsection{Column input data}

  In addition to the chromatography column used, input of the FAME column used
  need also to be present.
  
  The following columns are included:
  \begin{itemize}
    \item \code{fa.bpx70}, the BPX70 (GC-04 PTV); date June 2008
    \item \code{fa.zb5}, the ZB-5 column (GC-05 SSL LV); date March 2008
    \item \code{fa.apolar}, the "a-polar" data
    \item \code{fa.polar1}, the "polar bpx70" data by Eric Boschker
    \item \code{fa.polar2}, the "polar bpx70" data by Marco Houttekamer; date nov 2004
   \end{itemize}

  \subsection{Analysing the input data}

  Function \code{plfa} analyses the input data. It is defined as:
  
  \begin{verbatim}
plfa(input, fa = fa.bpx70, time_standard = c(17.045,31.155,41.288),
  ecl_standard = c(12,16,19), qty_standard,
  qty_sample = 1, volume_chlor, weight_chlor,
  int_standard = 0.02, int_ecl = int_standard)

  \end{verbatim}

  where:
  \begin{itemize}
    \item input contains the name of a \emph{csv} input file or a data.frame
      with a previously loaded input file
    \item fa is the name of the column used,
     one of \code{fa.bpx70}, \code{fa.zb5}, \code{fa.apolar}, \code{fa.polar1},
     or \code{fa.polar2}. The default is the bpx70 column
    \item time\_standard, the retention times of the standard
    \item ecl\_standard, the standard equivalent chain length
    \item qty\_standard, the quantity of the standard
    \item qty\_sample, the quantity of the sample
    \item volume\_chlor, the volume chloroform added
    \item weight\_chlor, weight chloroform recovered
    \item int\_standard, the precision or interval in equivalent chain length units
      with which the standard peaks are distinguished
    \item int\_ecl, the precision or interval in equivalent chain length units
      with which the other peaks are distinguished
  \end{itemize}
  
  For example, in the following code, a data set is first read from file:

\begin{verbatim}
fa.data <- read.csv("fa_input.csv")
\end{verbatim}

and then function \code{plfa} is used to convert it to the proper format.
The quantity of the standard added was 2.01, and the volume chloroform
used 15; the weight chloroform recovered was 20. For the other settings,
the defaults are used; e.g. the quantity of the sample was 1, the input
column was fa.bpx70, and the precisions used to discriminate the peaks are
set at 0.02.

<<>>=
  PLFA <- plfa(input=fa.data, qty_standard=2.01,
               volume_chlor = 15, weight_chlor=20)
  warnings()
@
The function complains that some peaks cannot unambiguously be attributed to
certain plfas and need your input.

There are two options when that happens:
\begin{itemize}
  \item you accept the defaults, as already present in the input file
    (not recommended). You do this by running function \code{plfa.default}.
  \item you go through all problems manually, using the \code{edit} command.
\end{itemize}

We first show how to run the \code{edit} command:
\begin{verbatim}
PLFA <- edit(PLFA)
\end{verbatim}

Note that by assigning the edited version to PLFA,
the edited version will overwrite the existing version
(and this is what you want).

The command will open a window like in figure \ref{fig:edit},
which shows the problems.

For instance, on the third line, the equivalen chain lenght of 14.49475 is
closest to i-C15:0/c14:1w5c, but it differs from the ecl of this
plfa with more than 0.02 (the inputted precision).

As it is likely that this ecl is indeed i-C15:0/c14:1w5c, we accept this name
and replace the item \code{UNKNOWN i-C15:0/C14:1w5c (14.473,0.022)}
with \code{i-C15:0/C14:1w5c}.

Another uncertainty of a different kind is the occurrence of multiple peaks
(e.g. on line 11 where it says
\code{MULTIPLE cy C17:0 (17.364,0.002), C17:1w7c (17.385,0.019)}

Here we have to select the most likely plfa.

The edited PLFA file is in figure \ref{fig:edit2}.

\setkeys{Gin}{width=0.6\textwidth}
\begin{figure}
\begin{center}
\includegraphics{edit.pdf}
\end{center}
\caption{The edit screen that shows the problems for which a decision should
be taken}
\label{fig:edit}
\end{figure}

\setkeys{Gin}{width=0.6\textwidth}
\begin{figure}
\begin{center}
\includegraphics{editnew.pdf}
\end{center}
\caption{The edit screen after which a decision has been taken for all problems}
\label{fig:edit2}
\end{figure}

Alternatively we may simply accept all the defaults suggested and type:
<<>>=
 PLFA <- plfa.accept(PLFA)
@

After that we can print the results to the screen
<<>>=
  data.frame(PLFA$name,PLFA$concentration)
@
and make a figure:

<<label=plfa,include=FALSE>>=
  plot(PLFA, xlab="ECL", ylab="peak area", main="a plfa dataset",
    writelabels=TRUE, marker=fa.marker, lwd=2)
@

\setkeys{Gin}{width=0.9\textwidth}
\begin{figure}
\begin{center}
<<label=plfa,fig=TRUE,echo=FALSE>>=
<<plfa>>
@
\end{center}
\caption{Graph of the plfa analysis - see text for \R-code}
\label{fig:plfa}
\end{figure}

\section{Things to do}
\begin{itemize}
 \item A function to merge several plfa upgraded data sets into one
 comprehensive table?
\end{itemize}


\clearpage

\end{document}
